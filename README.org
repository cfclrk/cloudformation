#+PROPERTY: header-args+ :results output

* Variables

  #+NAME: Env
  | Env Var            | Value                   |
  |--------------------+-------------------------|
  | AWS_PROFILE        | cloud-infra-prod        |
  | AWS_DEFAULT_REGION | us-east-2               |
  | TEMPLATE_PATH      | _out/ec2/webserver.yaml |
  | DEPLOYMENT_NAME    | test                    |

  #+begin_src emacs-lisp :var env=Env
    (setenv-file-export-pairs env)
  #+end_src

  #+RESULTS:

  =$TemplateName= is just the =$TEMPLATE_PATH= using dashes and without a file
  extension.

  #+NAME: TemplateName
  #+begin_src emacs-lisp :results value
    (let* ((template-path (getenv "TEMPLATE_PATH"))
           (parent-dir (f-base (f-parent template-path)))
           (base-name-dashes (s-replace "_" "-" (f-base template-path))))
      (concat parent-dir "-" base-name-dashes))
  #+end_src

  The =$StackName= is always: =$DeploymentName-$TemplateName=.

  #+NAME: StackName
  #+begin_src emacs-lisp :var TemplateName=TemplateName :results value
    (concat (getenv "DEPLOYMENT_NAME") "-" TemplateName)
  #+end_src

* Create Stack

** Package

   Only required if the template requires packaging. For a list of properties
   that can be filled in by packaging, see the [[https://docs.aws.amazon.com/cli/latest/reference/cloudformation/package.html][package]] command.

   TODO!

   #+begin_src sh
     aws cloudformation package \
         --template-file file://$TEMPLATE_PATH \
         --output-template-file output.yaml \
         --s3-bucket $BucketName
   #+end_src

** Create

   #+begin_src sh :var StackName=StackName
     aws cloudformation create-stack \
         --stack-name $StackName \
         --template-body file://$TEMPLATE_PATH \
         --capabilities CAPABILITY_AUTO_EXPAND CAPABILITY_IAM CAPABILITY_NAMED_IAM \
         --parameters ParameterKey=DeploymentName,ParameterValue=$DEPLOYMENT_NAME
   #+end_src

   #+RESULTS:
   : {
   :     "StackId": "arn:aws:cloudformation:us-east-2:054288142014:stack/test-ec2-webserver/a49e9e90-d52f-11eb-b24f-06c1059fc22a"
   : }

* Update Stack

** In Place

   #+begin_src sh :var StackName=StackName
     aws cloudformation update-stack \
         --stack-name $StackName \
         --template-body file://$TEMPLATE_PATH \
         --capabilities CAPABILITY_AUTO_EXPAND CAPABILITY_IAM CAPABILITY_NAMED_IAM \
         --parameters ParameterKey=DeploymentName,ParameterValue=$DEPLOYMENT_NAME
   #+end_src

** Using a ChangeSet

   Create a change set:

   #+begin_src sh :var StackName=StackName
     aws cloudformation create-change-set \
         --stack-name $StackName \
         --template-body file://$TEMPLATE_PATH \
         --change-set-name my-changes
   #+end_src

   Describe a change set:

   #+begin_src sh :var StackName=StackName
     aws cloudformation describe-change-set \
         --change-set-name my-changes \
         --stack-name $StackName
   #+end_src

   Apply a change set:

   #+begin_src sh :var StackName=StackName
     aws cloudformation execute-change-set \
         --change-set-name my-changes \
         --stack-name $StackName
   #+end_src

   Delete a change set. Does the change set get deleted automatically when it is
   applied?

   #+begin_src sh :var StackName=StackName
     aws cloudformation delete-change-set \
         --change-set-name my-changes \
         --stack-name $StackName
   #+end_src

* Delete Stack

  #+begin_src sh :var StackName=StackName
    aws cloudformation delete-stack \
        --stack-name $StackName
  #+end_src

  #+RESULTS:

* Get Stack Logs

  #+begin_src sh
    aws cloudformation describe-stack-events \
        --stack-name $StackName
  #+end_src

* TODO

  - [ ] Use nested stacks, as is the [[https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/best-practices.html#nested][best practice]].

  - [ ] Force regeneration of all files in =make.el=. This way I can do a =make
    clean= and then a =make=.

  - [ ] Make each page have a link to corresponding YAML file

  # Local Variables:
  # org-src-preserve-indentation: nil
  # org-adapt-indentation: t
  # End:
